; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\udp_demo.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\udp_demo.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\ -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\lwip\src\api -I..\..\lwip\src\arch -I..\..\lwip\src\include -I..\..\lwip\src\netif -I..\..\lwip\src\include\ipv4 -I..\..\Source\inc -I..\..\lwip\src -I..\..\Source\uIP-1.0\uip -I..\..\Source\uIP-APP -I..\..\Source\uIP-1.0\apps\webserver -IE:\git_projects\enc28j60-for-uip\Project\RVMDK\RTE -I"D:\Program Files\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\udp_demo.crf ..\..\Source\uIP-APP\udp_demo.c]
                          THUMB

                          AREA ||i.process_appdata||, CODE, READONLY, ALIGN=2

                  process_appdata PROC
;;;8      
;;;9      static void process_appdata(uint8_t* appdata, uint16_t applen)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;10     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;11     	uint16_t cmdlen;
;;;12     	
;;;13     	if(0 == memcmp(appdata,cmd_1,(cmdlen=strlen("cmd-1"))))//如果是命令是cmd1 那么回复特定的指令
000008  2005              MOVS     r0,#5
00000a  4606              MOV      r6,r0
00000c  4602              MOV      r2,r0
00000e  4812              LDR      r0,|L1.88|
000010  6801              LDR      r1,[r0,#0]  ; cmd_1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       memcmp
000018  b9b0              CBNZ     r0,|L1.72|
;;;14     	{
;;;15     		memcpy(uip_appdata,ack2cmd_1,strlen(ack2cmd_1));
00001a  4810              LDR      r0,|L1.92|
00001c  6800              LDR      r0,[r0,#0]  ; ack2cmd_1
00001e  f7fffffe          BL       strlen
000022  4607              MOV      r7,r0
000024  463a              MOV      r2,r7
000026  480d              LDR      r0,|L1.92|
000028  6801              LDR      r1,[r0,#0]  ; ack2cmd_1
00002a  480d              LDR      r0,|L1.96|
00002c  6800              LDR      r0,[r0,#0]  ; uip_appdata
00002e  f7fffffe          BL       __aeabi_memcpy
;;;16     		uip_udp_send(strlen(ack2cmd_1));
000032  480a              LDR      r0,|L1.92|
000034  6800              LDR      r0,[r0,#0]  ; ack2cmd_1
000036  f7fffffe          BL       strlen
00003a  4607              MOV      r7,r0
00003c  4639              MOV      r1,r7
00003e  4808              LDR      r0,|L1.96|
000040  6800              LDR      r0,[r0,#0]  ; uip_appdata
000042  f7fffffe          BL       uip_send
000046  e004              B        |L1.82|
                  |L1.72|
;;;17     	}else//否则，原样回复
;;;18     	{
;;;19     		uip_udp_send(applen);
000048  4629              MOV      r1,r5
00004a  4805              LDR      r0,|L1.96|
00004c  6800              LDR      r0,[r0,#0]  ; uip_appdata
00004e  f7fffffe          BL       uip_send
                  |L1.82|
;;;20     	}
;;;21     }
000052  e8bd81f0          POP      {r4-r8,pc}
;;;22     
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      cmd_1
                  |L1.92|
                          DCD      ack2cmd_1
                  |L1.96|
                          DCD      uip_appdata

                          AREA ||i.process_appdata2||, CODE, READONLY, ALIGN=2

                  process_appdata2 PROC
;;;23     
;;;24     static void process_appdata2(uint8_t* appdata, uint16_t applen)
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;26         memcpy(uip_appdata,"appdata2",strlen("appdata2"));
000006  4806              LDR      r0,|L2.32|
000008  6800              LDR      r0,[r0,#0]  ; uip_appdata
00000a  a106              ADR      r1,|L2.36|
00000c  680a              LDR      r2,[r1,#0]
00000e  6002              STR      r2,[r0,#0]
000010  6849              LDR      r1,[r1,#4]
000012  6041              STR      r1,[r0,#4]
;;;27         uip_udp_send(strlen("appdata2")); 
000014  2108              MOVS     r1,#8
000016  4802              LDR      r0,|L2.32|
000018  6800              LDR      r0,[r0,#0]  ; uip_appdata
00001a  f7fffffe          BL       uip_send
;;;28     }
00001e  bd70              POP      {r4-r6,pc}
;;;29         
                          ENDP

                  |L2.32|
                          DCD      uip_appdata
                  |L2.36|
000024  61707064          DCB      "appdata2",0
000028  61746132
00002c  00      
00002d  00                DCB      0
00002e  00                DCB      0
00002f  00                DCB      0

                          AREA ||i.udp_demo_appcall||, CODE, READONLY, ALIGN=2

                  udp_demo_appcall PROC
;;;51     
;;;52     void udp_demo_appcall(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	if(uip_newdata())
000002  4818              LDR      r0,|L3.100|
000004  7800              LDRB     r0,[r0,#0]  ; uip_flags
000006  f0000002          AND      r0,r0,#2
00000a  b1d0              CBZ      r0,|L3.66|
;;;55         {
;;;56     		switch(uip_udp_conn->lport)//本地端口
00000c  4816              LDR      r0,|L3.104|
00000e  6800              LDR      r0,[r0,#0]  ; uip_udp_conn
000010  8880              LDRH     r0,[r0,#4]
000012  f5a04011          SUB      r0,r0,#0x9100
000016  381f              SUBS     r0,r0,#0x1f
000018  b118              CBZ      r0,|L3.34|
00001a  f5b07f80          CMP      r0,#0x100
00001e  d10e              BNE      |L3.62|
000020  e006              B        |L3.48|
                  |L3.34|
;;;57     		{
;;;58     			case HTONS(8081):
;;;59     				process_appdata(uip_appdata, uip_len);
000022  4812              LDR      r0,|L3.108|
000024  8801              LDRH     r1,[r0,#0]  ; uip_len
000026  4812              LDR      r0,|L3.112|
000028  6800              LDR      r0,[r0,#0]  ; uip_appdata
00002a  f7fffffe          BL       process_appdata
;;;60     				break;
00002e  e007              B        |L3.64|
                  |L3.48|
;;;61                 case HTONS(8082):
;;;62     				process_appdata2(uip_appdata, uip_len);
000030  480e              LDR      r0,|L3.108|
000032  8801              LDRH     r1,[r0,#0]  ; uip_len
000034  480e              LDR      r0,|L3.112|
000036  6800              LDR      r0,[r0,#0]  ; uip_appdata
000038  f7fffffe          BL       process_appdata2
;;;63     				break;
00003c  e000              B        |L3.64|
                  |L3.62|
;;;64     			default:						  
;;;65     				break;
00003e  bf00              NOP      
                  |L3.64|
000040  e00e              B        |L3.96|
                  |L3.66|
;;;66     		}
;;;67     	}else if(uip_poll())
000042  4808              LDR      r0,|L3.100|
000044  7800              LDRB     r0,[r0,#0]  ; uip_flags
000046  f0000008          AND      r0,r0,#8
00004a  b148              CBZ      r0,|L3.96|
;;;68     	{
;;;69     		switch(uip_udp_conn->rport)//远程连接
00004c  4806              LDR      r0,|L3.104|
00004e  6800              LDR      r0,[r0,#0]  ; uip_udp_conn
000050  88c0              LDRH     r0,[r0,#6]
000052  f5a04017          SUB      r0,r0,#0x9700
000056  381f              SUBS     r0,r0,#0x1f
000058  b900              CBNZ     r0,|L3.92|
;;;70     		{
;;;71     			case HTONS(8087):
;;;72     				
;;;73     				break;
00005a  e000              B        |L3.94|
                  |L3.92|
;;;74     			default: 
;;;75     				break;
00005c  bf00              NOP      
                  |L3.94|
00005e  bf00              NOP                            ;73
                  |L3.96|
;;;76     		}  
;;;77     	}		
;;;78     }
000060  bd10              POP      {r4,pc}
;;;79     
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
                          DCD      uip_flags
                  |L3.104|
                          DCD      uip_udp_conn
                  |L3.108|
                          DCD      uip_len
                  |L3.112|
                          DCD      uip_appdata

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  636d642d          DCB      "cmd-1",0
000004  3100    
000006  00                DCB      0
000007  00                DCB      0
000008  74686973          DCB      "this is a ack to cmd-1",0
00000c  20697320
000010  61206163
000014  6b20746f
000018  20636d64
00001c  2d3100  

                          AREA ||.data||, DATA, ALIGN=2

                  cmd_1
                          DCD      ||.conststring||
                  ack2cmd_1
                          DCD      ||.conststring||+0x8
