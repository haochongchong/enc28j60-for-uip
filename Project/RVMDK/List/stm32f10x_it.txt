; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_it.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\ -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\lwip\src\api -I..\..\lwip\src\arch -I..\..\lwip\src\include -I..\..\lwip\src\netif -I..\..\lwip\src\include\ipv4 -I..\..\Source\inc -I..\..\lwip\src -I..\..\Source\uIP-1.0\uip -I..\..\Source\uIP-APP -I..\..\Source\uIP-1.0\apps\webserver -ID:\ENC28J60\Project\RVMDK\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\stm32f10x_it.crf ..\..\Source\src\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;72       */
;;;73     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;74     {
;;;75       /* Go to infinite loop when Bus Fault exception occurs */
;;;76       while (1)
000002  e7fe              B        |L1.2|
;;;77       {
;;;78       }
;;;79     }
;;;80     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;107      */
;;;108    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;109    {
;;;110    }
;;;111    
                          ENDP


                          AREA ||i.EXTI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  EXTI1_IRQHandler PROC
;;;147    
;;;148    void EXTI1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;149    {
;;;150      int ret = 0;
000002  2400              MOVS     r4,#0
;;;151    
;;;152      if(EXTI_GetITStatus(EXTI_Line1) != RESET)				 
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       EXTI_GetITStatus
00000a  b120              CBZ      r0,|L3.22|
;;;153      {
;;;154    
;;;155        EXTI_ClearITPendingBit(EXTI_Line1);		//清除中断请求标志
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       EXTI_ClearITPendingBit
;;;156    
;;;157    	process_mac();				//处理网卡数据包
000012  f7fffffe          BL       process_mac
                  |L3.22|
;;;158      }
;;;159    }
000016  bd10              POP      {r4,pc}
;;;160    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;46       */
;;;47     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;48     {
;;;49       /* Go to infinite loop when Hard Fault exception occurs */
;;;50       while (1)
000002  e7fe              B        |L4.2|
;;;51       {
;;;52       }
;;;53     }
;;;54     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;59       */
;;;60     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;61     {
;;;62       /* Go to infinite loop when Memory Manage exception occurs */
;;;63       while (1)
000002  e7fe              B        |L5.2|
;;;64       {
;;;65       }
;;;66     }
;;;67     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;37       */
;;;38     void NMI_Handler(void)
000000  4770              BX       lr
;;;39     {
;;;40     }
;;;41     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;116      */
;;;117    void PendSV_Handler(void)
000000  4770              BX       lr
;;;118    {
;;;119    }
;;;120    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;98       */
;;;99     void SVC_Handler(void)
000000  4770              BX       lr
;;;100    {
;;;101    }
;;;102    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;130    //系统时钟每20ms中断一次，system_tick_num记录系统的tick数
;;;131    void SysTick_Handler(void)	
000000  4805              LDR      r0,|L9.24|
;;;132    {
;;;133    	system_tick_num += 20;
000002  6800              LDR      r0,[r0,#0]  ; system_tick_num
000004  3014              ADDS     r0,r0,#0x14
000006  4904              LDR      r1,|L9.24|
000008  6008              STR      r0,[r1,#0]  ; system_tick_num
;;;134    	uip_timer+=2;
00000a  4804              LDR      r0,|L9.28|
00000c  6800              LDR      r0,[r0,#0]  ; uip_timer
00000e  1c80              ADDS     r0,r0,#2
000010  4902              LDR      r1,|L9.28|
000012  6008              STR      r0,[r1,#0]  ; uip_timer
;;;135    }
000014  4770              BX       lr
;;;136    
                          ENDP

000016  0000              DCW      0x0000
                  |L9.24|
                          DCD      system_tick_num
                  |L9.28|
                          DCD      uip_timer

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;85       */
;;;86     void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L10.2|
;;;87     {
;;;88       /* Go to infinite loop when Usage Fault exception occurs */
;;;89       while (1)
000002  e7fe              B        |L10.2|
;;;90       {
;;;91       }
;;;92     }
;;;93     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  uip_timer
                          DCD      0x00000000
