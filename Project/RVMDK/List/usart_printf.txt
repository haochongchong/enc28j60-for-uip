; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\usart_printf.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\usart_printf.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\ -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\lwip\src\api -I..\..\lwip\src\arch -I..\..\lwip\src\include -I..\..\lwip\src\netif -I..\..\lwip\src\include\ipv4 -I..\..\Source\inc -I..\..\lwip\src -I..\..\Source\uIP-1.0\uip -I..\..\Source\uIP-APP -I..\..\Source\uIP-1.0\apps\webserver -IE:\git_projects\enc28j60-for-uip\Project\RVMDK\RTE -I"D:\Program Files\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\usart_printf.crf ..\..\Source\src\usart_printf.c]
                          THUMB

                          AREA ||i.fgetc||, CODE, READONLY, ALIGN=2

                  fgetc PROC
;;;67     */
;;;68     int fgetc(FILE *f)
000000  b510              PUSH     {r4,lr}
;;;69     {
000002  4604              MOV      r4,r0
;;;70     	/* 等待串口1输入数据 */
;;;71     	while (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == RESET)
000004  bf00              NOP      
                  |L1.6|
000006  2120              MOVS     r1,#0x20
000008  4804              LDR      r0,|L1.28|
00000a  f7fffffe          BL       USART_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L1.6|
;;;72     	{}
;;;73     
;;;74     	return (int)USART_ReceiveData(USART1);
000012  4802              LDR      r0,|L1.28|
000014  f7fffffe          BL       USART_ReceiveData
;;;75     }
000018  bd10              POP      {r4,pc}
;;;76     
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40013800

                          AREA ||i.fputc||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;47     */
;;;48     int fputc(int ch, FILE *f)
000000  b570              PUSH     {r4-r6,lr}
;;;49     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;50     	/* Place your implementation of fputc here */
;;;51     	/* e.g. write a character to the USART */
;;;52     	USART_SendData(USART1, (uint8_t) ch);
000006  b2e1              UXTB     r1,r4
000008  4805              LDR      r0,|L2.32|
00000a  f7fffffe          BL       USART_SendData
;;;53     
;;;54     	/* Loop until the end of transmission */
;;;55     	while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET)
00000e  bf00              NOP      
                  |L2.16|
000010  2140              MOVS     r1,#0x40
000012  4803              LDR      r0,|L2.32|
000014  f7fffffe          BL       USART_GetFlagStatus
000018  2800              CMP      r0,#0
00001a  d0f9              BEQ      |L2.16|
;;;56     	{}
;;;57     
;;;58     	return ch;
00001c  4620              MOV      r0,r4
;;;59     }
00001e  bd70              POP      {r4-r6,pc}
;;;60     
                          ENDP

                  |L2.32|
                          DCD      0x40013800
