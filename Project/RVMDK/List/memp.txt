; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\memp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\memp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\ -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\lwip\src\api -I..\..\lwip\src\arch -I..\..\lwip\src\include -I..\..\lwip\src\netif -I..\..\lwip\src\include\ipv4 -I..\..\Source\inc -I..\..\lwip\src -I..\..\Source\uIP-1.0\uip -I..\..\Source\uIP-APP -I..\..\Source\uIP-1.0\apps\webserver -IE:\git_projects\enc28j60-for-uip\Project\RVMDK\RTE -I"D:\Program Files\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include" -I"D:\Program Files\ARM\PACK\Keil\STM32F1xx_DFP\2.1.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\memp.crf ..\..\lwip\src\core\memp.c]
                          THUMB

                          AREA ||i.memp_free||, CODE, READONLY, ALIGN=2

                  memp_free PROC
;;;434    void
;;;435    memp_free(memp_t type, void *mem)
000000  b570              PUSH     {r4-r6,lr}
;;;436    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;437      struct memp *memp;
;;;438      SYS_ARCH_DECL_PROTECT(old_level);
;;;439    
;;;440      if (mem == NULL) {
000006  b905              CBNZ     r5,|L1.10|
                  |L1.8|
;;;441        return;
;;;442      }
;;;443      LWIP_ASSERT("memp_free: mem properly aligned",
;;;444                    ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
;;;445    
;;;446      memp = (struct memp *)(void *)((u8_t*)mem - MEMP_SIZE);
;;;447    
;;;448      SYS_ARCH_PROTECT(old_level);
;;;449    #if MEMP_OVERFLOW_CHECK
;;;450    #if MEMP_OVERFLOW_CHECK >= 2
;;;451      memp_overflow_check_all();
;;;452    #else
;;;453      memp_overflow_check_element_overflow(memp, type);
;;;454      memp_overflow_check_element_underflow(memp, type);
;;;455    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;456    #endif /* MEMP_OVERFLOW_CHECK */
;;;457    
;;;458      MEMP_STATS_DEC(used, type); 
;;;459      
;;;460      memp->next = memp_tab[type]; 
;;;461      memp_tab[type] = memp;
;;;462    
;;;463    #if MEMP_SANITY_CHECK
;;;464      LWIP_ASSERT("memp sanity", memp_sanity());
;;;465    #endif /* MEMP_SANITY_CHECK */
;;;466    
;;;467      SYS_ARCH_UNPROTECT(old_level);
;;;468    }
000008  bd70              POP      {r4-r6,pc}
                  |L1.10|
00000a  bf00              NOP                            ;443
00000c  f0050003          AND      r0,r5,#3              ;443
000010  b120              CBZ      r0,|L1.28|
000012  a00d              ADR      r0,|L1.72|
000014  f7fffffe          BL       __2printf
000018  bf00              NOP                            ;443
                  |L1.26|
00001a  e7fe              B        |L1.26|
                  |L1.28|
00001c  bf00              NOP                            ;443
00001e  462e              MOV      r6,r5                 ;446
000020  4811              LDR      r0,|L1.104|
000022  eb001004          ADD      r0,r0,r4,LSL #4       ;458
000026  88c0              LDRH     r0,[r0,#6]            ;458
000028  1e40              SUBS     r0,r0,#1              ;458
00002a  b281              UXTH     r1,r0                 ;458
00002c  480e              LDR      r0,|L1.104|
00002e  eb001004          ADD      r0,r0,r4,LSL #4       ;458
000032  80c1              STRH     r1,[r0,#6]            ;458
000034  480d              LDR      r0,|L1.108|
000036  f8500024          LDR      r0,[r0,r4,LSL #2]     ;460
00003a  6030              STR      r0,[r6,#0]            ;460
00003c  480b              LDR      r0,|L1.108|
00003e  f8406024          STR      r6,[r0,r4,LSL #2]     ;461
000042  bf00              NOP      
000044  e7e0              B        |L1.8|
;;;469    
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
000048  6d656d70          DCB      "memp_free: mem properly aligned",0
00004c  5f667265
000050  653a206d
000054  656d2070
000058  726f7065
00005c  726c7920
000060  616c6967
000064  6e656400
                  |L1.104|
                          DCD      lwip_stats+0xb8
                  |L1.108|
                          DCD      memp_tab

                          AREA ||i.memp_init||, CODE, READONLY, ALIGN=2

                  memp_init PROC
;;;337    void
;;;338    memp_init(void)
000000  b510              PUSH     {r4,lr}
;;;339    {
;;;340      struct memp *memp;
;;;341      u16_t i, j;
;;;342    
;;;343      for (i = 0; i < MEMP_MAX; ++i) {
000002  2000              MOVS     r0,#0
000004  e015              B        |L2.50|
                  |L2.6|
;;;344        MEMP_STATS_AVAIL(used, i, 0);
000006  2400              MOVS     r4,#0
000008  4b1c              LDR      r3,|L2.124|
00000a  eb031300          ADD      r3,r3,r0,LSL #4
00000e  80dc              STRH     r4,[r3,#6]
;;;345        MEMP_STATS_AVAIL(max, i, 0);
000010  4b1a              LDR      r3,|L2.124|
000012  eb031300          ADD      r3,r3,r0,LSL #4
000016  811c              STRH     r4,[r3,#8]
;;;346        MEMP_STATS_AVAIL(err, i, 0);
000018  4b18              LDR      r3,|L2.124|
00001a  eb031300          ADD      r3,r3,r0,LSL #4
00001e  815c              STRH     r4,[r3,#0xa]
;;;347        MEMP_STATS_AVAIL(avail, i, memp_num[i]);
000020  4b17              LDR      r3,|L2.128|
000022  f8334010          LDRH     r4,[r3,r0,LSL #1]
000026  4b15              LDR      r3,|L2.124|
000028  eb031300          ADD      r3,r3,r0,LSL #4
00002c  809c              STRH     r4,[r3,#4]
00002e  1c43              ADDS     r3,r0,#1              ;343
000030  b298              UXTH     r0,r3                 ;343
                  |L2.50|
000032  280a              CMP      r0,#0xa               ;343
000034  dbe7              BLT      |L2.6|
;;;348      }
;;;349    
;;;350    #if !MEMP_SEPARATE_POOLS
;;;351      memp = (struct memp *)LWIP_MEM_ALIGN(memp_memory);
000036  4b13              LDR      r3,|L2.132|
000038  f0230103          BIC      r1,r3,#3
;;;352    #endif /* !MEMP_SEPARATE_POOLS */
;;;353      /* for every pool: */
;;;354      for (i = 0; i < MEMP_MAX; ++i) {
00003c  2000              MOVS     r0,#0
00003e  e019              B        |L2.116|
                  |L2.64|
;;;355        memp_tab[i] = NULL;
000040  2300              MOVS     r3,#0
000042  4c11              LDR      r4,|L2.136|
000044  f8443020          STR      r3,[r4,r0,LSL #2]
;;;356    #if MEMP_SEPARATE_POOLS
;;;357        memp = (struct memp*)memp_bases[i];
;;;358    #endif /* MEMP_SEPARATE_POOLS */
;;;359        /* create a linked list of memp elements */
;;;360        for (j = 0; j < memp_num[i]; ++j) {
000048  2200              MOVS     r2,#0
00004a  e00c              B        |L2.102|
                  |L2.76|
;;;361          memp->next = memp_tab[i];
00004c  4b0e              LDR      r3,|L2.136|
00004e  f8533020          LDR      r3,[r3,r0,LSL #2]
000052  600b              STR      r3,[r1,#0]
;;;362          memp_tab[i] = memp;
000054  4b0c              LDR      r3,|L2.136|
000056  f8431020          STR      r1,[r3,r0,LSL #2]
;;;363          memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]
00005a  4b0c              LDR      r3,|L2.140|
00005c  f8333010          LDRH     r3,[r3,r0,LSL #1]
000060  4419              ADD      r1,r1,r3
000062  1c53              ADDS     r3,r2,#1              ;360
000064  b29a              UXTH     r2,r3                 ;360
                  |L2.102|
000066  4b06              LDR      r3,|L2.128|
000068  f8333010          LDRH     r3,[r3,r0,LSL #1]     ;360
00006c  4293              CMP      r3,r2                 ;360
00006e  dced              BGT      |L2.76|
000070  1c43              ADDS     r3,r0,#1              ;354
000072  b298              UXTH     r0,r3                 ;354
                  |L2.116|
000074  280a              CMP      r0,#0xa               ;354
000076  dbe3              BLT      |L2.64|
;;;364    #if MEMP_OVERFLOW_CHECK
;;;365            + MEMP_SANITY_REGION_AFTER_ALIGNED
;;;366    #endif
;;;367          );
;;;368        }
;;;369      }
;;;370    #if MEMP_OVERFLOW_CHECK
;;;371      memp_overflow_init();
;;;372      /* check everything a first time to see if it worked */
;;;373      memp_overflow_check_all();
;;;374    #endif /* MEMP_OVERFLOW_CHECK */
;;;375    }
000078  bd10              POP      {r4,pc}
;;;376    
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      lwip_stats+0xb8
                  |L2.128|
                          DCD      memp_num
                  |L2.132|
                          DCD      memp_memory+0x3
                  |L2.136|
                          DCD      memp_tab
                  |L2.140|
                          DCD      memp_sizes

                          AREA ||i.memp_malloc||, CODE, READONLY, ALIGN=2

                  memp_malloc PROC
;;;389    #if !MEMP_OVERFLOW_CHECK
;;;390    memp_malloc(memp_t type)
000000  b570              PUSH     {r4-r6,lr}
;;;391    #else
;;;392    memp_malloc_fn(memp_t type, const char* file, const int line)
;;;393    #endif
;;;394    {
000002  4604              MOV      r4,r0
;;;395      struct memp *memp;
;;;396      SYS_ARCH_DECL_PROTECT(old_level);
;;;397     
;;;398      LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
000004  bf00              NOP      
000006  2c0a              CMP      r4,#0xa
000008  db04              BLT      |L3.20|
00000a  a023              ADR      r0,|L3.152|
00000c  f7fffffe          BL       __2printf
000010  2000              MOVS     r0,#0
                  |L3.18|
;;;399    
;;;400      SYS_ARCH_PROTECT(old_level);
;;;401    #if MEMP_OVERFLOW_CHECK >= 2
;;;402      memp_overflow_check_all();
;;;403    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;404    
;;;405      memp = memp_tab[type];
;;;406      
;;;407      if (memp != NULL) {
;;;408        memp_tab[type] = memp->next;
;;;409    #if MEMP_OVERFLOW_CHECK
;;;410        memp->next = NULL;
;;;411        memp->file = file;
;;;412        memp->line = line;
;;;413    #endif /* MEMP_OVERFLOW_CHECK */
;;;414        MEMP_STATS_INC_USED(used, type);
;;;415        LWIP_ASSERT("memp_malloc: memp properly aligned",
;;;416                    ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
;;;417        memp = (struct memp*)(void *)((u8_t*)memp + MEMP_SIZE);
;;;418      } else {
;;;419        LWIP_DEBUGF(MEMP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("memp_malloc: out of memory in pool %s\n", memp_desc[type]));
;;;420        MEMP_STATS_INC(err, type);
;;;421      }
;;;422    
;;;423      SYS_ARCH_UNPROTECT(old_level);
;;;424    
;;;425      return memp;
;;;426    }
000012  bd70              POP      {r4-r6,pc}
                  |L3.20|
000014  bf00              NOP                            ;398
000016  4828              LDR      r0,|L3.184|
000018  f8505024          LDR      r5,[r0,r4,LSL #2]     ;405
00001c  2d00              CMP      r5,#0                 ;407
00001e  d02c              BEQ      |L3.122|
000020  4925              LDR      r1,|L3.184|
000022  6828              LDR      r0,[r5,#0]            ;408
000024  f8410024          STR      r0,[r1,r4,LSL #2]     ;408
000028  bf00              NOP                            ;414
00002a  4824              LDR      r0,|L3.188|
00002c  eb001004          ADD      r0,r0,r4,LSL #4       ;414
000030  88c0              LDRH     r0,[r0,#6]            ;414
000032  1c40              ADDS     r0,r0,#1              ;414
000034  b281              UXTH     r1,r0                 ;414
000036  4821              LDR      r0,|L3.188|
000038  eb001004          ADD      r0,r0,r4,LSL #4       ;414
00003c  80c1              STRH     r1,[r0,#6]            ;414
00003e  481f              LDR      r0,|L3.188|
000040  eb001004          ADD      r0,r0,r4,LSL #4       ;414
000044  8901              LDRH     r1,[r0,#8]            ;414
000046  481d              LDR      r0,|L3.188|
000048  eb001004          ADD      r0,r0,r4,LSL #4       ;414
00004c  88c0              LDRH     r0,[r0,#6]            ;414
00004e  4281              CMP      r1,r0                 ;414
000050  da07              BGE      |L3.98|
000052  481a              LDR      r0,|L3.188|
000054  eb001004          ADD      r0,r0,r4,LSL #4       ;414
000058  88c1              LDRH     r1,[r0,#6]            ;414
00005a  4818              LDR      r0,|L3.188|
00005c  eb001004          ADD      r0,r0,r4,LSL #4       ;414
000060  8101              STRH     r1,[r0,#8]            ;414
                  |L3.98|
000062  bf00              NOP                            ;414
000064  bf00              NOP                            ;415
000066  f0050003          AND      r0,r5,#3              ;415
00006a  b120              CBZ      r0,|L3.118|
00006c  a014              ADR      r0,|L3.192|
00006e  f7fffffe          BL       __2printf
000072  bf00              NOP                            ;415
                  |L3.116|
000074  e7fe              B        |L3.116|
                  |L3.118|
000076  bf00              NOP                            ;415
000078  e00b              B        |L3.146|
                  |L3.122|
00007a  bf00              NOP                            ;419
00007c  bf00              NOP                            ;419
00007e  480f              LDR      r0,|L3.188|
000080  eb001004          ADD      r0,r0,r4,LSL #4       ;420
000084  8940              LDRH     r0,[r0,#0xa]          ;420
000086  1c40              ADDS     r0,r0,#1              ;420
000088  b281              UXTH     r1,r0                 ;420
00008a  480c              LDR      r0,|L3.188|
00008c  eb001004          ADD      r0,r0,r4,LSL #4       ;420
000090  8141              STRH     r1,[r0,#0xa]          ;420
                  |L3.146|
000092  4628              MOV      r0,r5                 ;425
000094  e7bd              B        |L3.18|
;;;427    
                          ENDP

000096  0000              DCW      0x0000
                  |L3.152|
000098  6d656d70          DCB      "memp_malloc: type < MEMP_MAX",0
00009c  5f6d616c
0000a0  6c6f633a
0000a4  20747970
0000a8  65203c20
0000ac  4d454d50
0000b0  5f4d4158
0000b4  00      
0000b5  00                DCB      0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L3.184|
                          DCD      memp_tab
                  |L3.188|
                          DCD      lwip_stats+0xb8
                  |L3.192|
0000c0  6d656d70          DCB      "memp_malloc: memp properly aligned",0
0000c4  5f6d616c
0000c8  6c6f633a
0000cc  206d656d
0000d0  70207072
0000d4  6f706572
0000d8  6c792061
0000dc  6c69676e
0000e0  656400  
0000e3  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  memp_tab
                          %        40
                  memp_memory
                          %        19523

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  memp_sizes
000000  001c0020          DCW      0x001c,0x0020
000004  0098001c          DCW      0x0098,0x001c
000008  00140020          DCW      0x0014,0x0020
00000c  00180010          DCW      0x0018,0x0010
000010  00100430          DCW      0x0010,0x0430
                  memp_num
000014  00040004          DCW      0x0004,0x0004
000018  00050008          DCW      0x0005,0x0008
00001c  00100005          DCW      0x0010,0x0005
000020  000f0003          DCW      0x000f,0x0003
000024  00100010          DCW      0x0010,0x0010

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  5241575f          DCB      "RAW_PCB",0
000004  50434200
000008  5544505f          DCB      "UDP_PCB",0
00000c  50434200
000010  5443505f          DCB      "TCP_PCB",0
000014  50434200
000018  5443505f          DCB      "TCP_PCB_LISTEN",0
00001c  5043425f
000020  4c495354
000024  454e00  
000027  00                DCB      0
000028  5443505f          DCB      "TCP_SEG",0
00002c  53454700
000030  52454153          DCB      "REASSDATA",0
000034  53444154
000038  4100    
00003a  00                DCB      0
00003b  00                DCB      0
00003c  46524147          DCB      "FRAG_PBUF",0
000040  5f504255
000044  4600    
000046  00                DCB      0
000047  00                DCB      0
000048  5359535f          DCB      "SYS_TIMEOUT",0
00004c  54494d45
000050  4f555400
000054  50425546          DCB      "PBUF_REF/ROM",0
000058  5f524546
00005c  2f524f4d
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
000064  50425546          DCB      "PBUF_POOL",0
000068  5f504f4f
00006c  4c00    

                          AREA ||.data||, DATA, ALIGN=2

                  memp_desc
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x10
                          DCD      ||.conststring||+0x18
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x30
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x48
                          DCD      ||.conststring||+0x54
                          DCD      ||.conststring||+0x64
